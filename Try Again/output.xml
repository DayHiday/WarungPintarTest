<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.6 on darwin)" generated="20210409 11:54:30.034" rpa="false">
<suite id="s1" name="Api" source="/Users/muhammadhidayat/Automation Web/Try Again/exercise3/tests/api.robot">
<test id="s1-t1" name="Success Hit">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>success_hit</arg>
<arg>${url}</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20210409 11:54:31.176" level="INFO">Creating Session using : alias=success_hit, url=https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210409 11:54:31.172" endtime="20210409 11:54:31.177"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210409 11:54:31.182" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210409 11:54:31.178" endtime="20210409 11:54:31.182"></status>
</kw>
<kw name="Load JSON From File" library="JSONLibrary">
<doc>Load JSON from file.</doc>
<arguments>
<arg>/Users/muhammadhidayat/Automation Web/Try Again/exercise3/tests/data.json</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20210409 11:54:31.192" level="INFO">${json_object} = {'prefix': 'PT', 'name': 'Sejahtera', 'suffix': 'Tbk', 'industry_id': '1', 'employee_size': '500', 'street': 'Jl.Sudirman kav. 21', 'place': 'Sudirman Tower', 'geograph_id': 100, 'phone': '08561290092...</msg>
<status status="PASS" starttime="20210409 11:54:31.182" endtime="20210409 11:54:31.192"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>success_hit</arg>
<arg>${url}</arg>
<arg>data=${json_object}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210409 11:54:32.622" level="INFO">POST Request : url=https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7/https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7 
 path_url=/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7/https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '202'} 
 body={"prefix": "PT", "name": "Sejahtera", "suffix": "Tbk", "industry_id": "1", "employee_size": "500", "street": "Jl.Sudirman kav. 21", "place": "Sudirman Tower", "geograph_id": 100, "phone": "08561290092"} 
 </msg>
<msg timestamp="20210409 11:54:32.623" level="INFO">POST Response : url=https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7/https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e7 
 status=200, reason=OK 
 body={
"data": {
"company_id": 11

},
"message": "Resource has been created",
"code": "STATUS_CREATED"
} 
 </msg>
<msg timestamp="20210409 11:54:32.623" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210409 11:54:31.195" endtime="20210409 11:54:32.623"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp}</arg>
<arg>&lt;Response [200]&gt;</arg>
</arguments>
<msg timestamp="20210409 11:54:32.624" level="INFO">Argument types are:
&lt;class 'requests.models.Response'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210409 11:54:32.623" endtime="20210409 11:54:32.624"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<status status="PASS" starttime="20210409 11:54:32.625" endtime="20210409 11:54:32.626"></status>
</kw>
<status status="PASS" starttime="20210409 11:54:31.168" endtime="20210409 11:54:32.626" critical="yes"></status>
</test>
<test id="s1-t2" name="Failed Hit">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>failed_hit</arg>
<arg>${url_fail}</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20210409 11:54:32.629" level="INFO">Creating Session using : alias=failed_hit, url=https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210409 11:54:32.628" endtime="20210409 11:54:32.629"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210409 11:54:32.630" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20210409 11:54:32.630" endtime="20210409 11:54:32.630"></status>
</kw>
<kw name="Load JSON From File" library="JSONLibrary">
<doc>Load JSON from file.</doc>
<arguments>
<arg>/Users/muhammadhidayat/Automation Web/Try Again/exercise3/tests/data.json</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20210409 11:54:32.632" level="INFO">${json_object} = {'prefix': 'PT', 'name': 'Sejahtera', 'suffix': 'Tbk', 'industry_id': '1', 'employee_size': '500', 'street': 'Jl.Sudirman kav. 21', 'place': 'Sudirman Tower', 'geograph_id': 100, 'phone': '08561290092...</msg>
<status status="PASS" starttime="20210409 11:54:32.631" endtime="20210409 11:54:32.632"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>failed_hit</arg>
<arg>${url_fail}</arg>
<arg>data=${json_object}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210409 11:54:33.560" level="INFO">POST Request : url=https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1/https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1 
 path_url=/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1/https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '202'} 
 body={"prefix": "PT", "name": "Sejahtera", "suffix": "Tbk", "industry_id": "1", "employee_size": "500", "street": "Jl.Sudirman kav. 21", "place": "Sudirman Tower", "geograph_id": 100, "phone": "08561290092"} 
 </msg>
<msg timestamp="20210409 11:54:33.560" level="INFO">POST Response : url=https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1/https://run.mocky.io/v3/a5a5dc82-2a4f-4037-b6d8-0e9cae6208e1 
 status=404, reason=Not Found 
 body=None 
 </msg>
<msg timestamp="20210409 11:54:33.560" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210409 11:54:32.633" endtime="20210409 11:54:33.560"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp}</arg>
<arg>&lt;Response [404]&gt;</arg>
</arguments>
<msg timestamp="20210409 11:54:33.561" level="INFO">Argument types are:
&lt;class 'requests.models.Response'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210409 11:54:33.561" endtime="20210409 11:54:33.562"></status>
</kw>
<status status="PASS" starttime="20210409 11:54:32.627" endtime="20210409 11:54:33.562" critical="yes"></status>
</test>
<status status="PASS" starttime="20210409 11:54:30.039" endtime="20210409 11:54:33.563"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Api">Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
